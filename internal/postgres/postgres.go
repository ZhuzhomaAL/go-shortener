package postgres

import (
	"context"
	"database/sql"
	"fmt"
	"log"
	"time"

	_ "github.com/lib/pq"
)

func GetConnection(dsnString string) *sql.DB {
	if dsnString == "" {
		return nil
	}

	db, err := sql.Open("postgres", dsnString)
	if err != nil {
		log.Fatal(err)
	}

	err = db.Ping()
	if err != nil {
		log.Fatal(err)
	}

	return db
}

func createShortURLTable(db *sql.DB) error {
	query := `CREATE TABLE IF NOT EXISTS short_url(id int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, full_url varchar, 
short_url varchar, user_id varchar(36))`
	ctx, cancel := context.WithTimeout(context.Background(), 5*time.Second)
	defer cancel()
	_, err := db.ExecContext(ctx, query)
	if err != nil {
		return err
	}
	return nil
}

func createIndex(db *sql.DB) error {
	query := `CREATE UNIQUE INDEX IF NOT EXISTS full_url ON short_url(full_url)`
	ctx, cancel := context.WithTimeout(context.Background(), 5*time.Second)
	defer cancel()
	_, err := db.ExecContext(ctx, query)
	if err != nil {
		return err
	}
	return nil
}

func InitializeDB(db *sql.DB) error {
	err := createShortURLTable(db)
	if err != nil {
		return fmt.Errorf("failed to create short url table: %w", err)
	}
	err = createIndex(db)
	if err != nil {
		return fmt.Errorf("failed to create short url index: %w", err)
	}
	return nil
}
